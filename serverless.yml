service: AWS-SERVERLESS

frameworkVersion: "3"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  timeout: 15
  stage: ${opt:stage, 'dev'}
  region: us-east-2
  environment:
    TABLE_NAME: ${self:custom.AuctionsTable.name}
  iam:
    role:
      statements:
        - ${file(src/resources/iampermissions.yml):IAMPERMISSIONS}

resources:
  Resources:
    AuctionTable: ${file(src/resources/Resource.yml):AuctionTable}

functions:
  createAuction:
    handler: src/handlers/createAuction.createAuction
    events:
      - http:
          method: POST
          path: /create
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.getAuctions
    events:
      - http:
          method: GET
          path: /getAuctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.getAuction
    events:
      - http:
          method: GET
          path: /getAuction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.placeBid
    events:
      - http:
          method: PATCH
          path: /placeBid/{id}/bids
          authorizer: ${self:custom.authorizer}

  processBids:
    handler: src/handlers/processBids.processBids
    events:
      - http:
          method: GET
          path: /processBids

custom:
  authorizer: arn:aws:lambda:${aws:region}:${aws:accountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionTable
    arn: !GetAtt AuctionTable.Arn
